Parameters:
  VpcName:
    Type: String
    Description: Enter VPC Name
  VpcCidr:
    Type: String
    Default: 172.32.0.0/16
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    Description: Enter VPC CIDR block.  Ex 172.32.0.0/16
  InboundIP:
    Type: String
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    Description: Enter IP in CIDR notation.  Ex 0.0.0.0/0
  PanoramaName:
    Type: String
    Description: Enter Panorama Name
  MgmtCidr:
    Type: String
    Default: 172.32.0.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    Description: Enter VPC CIDR block.  Ex 172.32.0.0/16
  UntrustCidr:
    Type: String
    Default: 172.32.1.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    Description: Enter VPC CIDR block.  Ex 172.32.1.0/24
  TrustCidr:
    Type: String
    Default: 172.32.2.0/24
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    Description: Enter VPC CIDR block.  Ex 172.32.2.0/24
  InternetGateway:
    Type: String
    Default: aevans-POC-IG
  RouteTable:
    Type: String
    Default: aevans-POC-RT
  KeyPair:
    Type: String
    Default: use2-ec2
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
        CidrBlock: !Ref VpcCidr
        InstanceTenancy: default
        EnableDnsSupport: 'true'
        EnableDnsHostnames: 'true'
        Tags:
            - Key: Name
              Value: !Ref VpcName
  mgmtsubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
        CidrBlock: !Ref MgmtCidr
        AvailabilityZone: us-east-2b
        VpcId: !Ref VPC
        Tags:
            - Key: Name
              Value: Mgmt
  trustsubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
        CidrBlock: !Ref TrustCidr
        AvailabilityZone: us-east-2b
        VpcId: !Ref VPC
        Tags:
            - Key: Name
              Value: Trust
  untrustsubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
        CidrBlock: !Ref UntrustCidr
        AvailabilityZone: us-east-2b
        VpcId: !Ref VPC
        Tags:
            - Key: Name
              Value: Untrust
  IGW:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
        Tags:
            - Key: Name
              Value: !Ref InternetGateway
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
        VpcId: !Ref VPC
        InternetGatewayId: !Ref IGW
  DHCPOpt:
    Type: 'AWS::EC2::DHCPOptions'
    Properties:
        DomainName: us-east-2.compute.internal
        DomainNameServers:
            - AmazonProvidedDNS
  RT:
    Type: 'AWS::EC2::RouteTable'
    Properties:
        VpcId: !Ref VPC
        Tags:
            - Key: Name
              Value: !Ref RouteTable
  DefaultRoute:
    Type: 'AWS::EC2::Route'
    Properties:
        DestinationCidrBlock: 0.0.0.0/0
        RouteTableId: !Ref RT
        GatewayId: !Ref IGW
    DependsOn: 
        - AttachGateway
  RTSubnetAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
        RouteTableId: !Ref RT
        SubnetId: !Ref mgmtsubnet
  NetworkAcl:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
        VpcId: !Ref VPC
  EIP:
    Type: 'AWS::EC2::EIP'
    DependsOn:
        - IGW
    Properties:
        Domain: vpc
  Panorama:
    Type: 'AWS::EC2::Instance'
    Properties:
        DisableApiTermination: 'false'
        InstanceInitiatedShutdownBehavior: stop
        ImageId: ami-013c503f1741aa646
        InstanceType: m4.2xlarge
        KeyName: !Ref KeyPair
        Monitoring: 'false'
        Tags:
            - Key: Name
              Value: !Ref PanoramaName
        NetworkInterfaces:
            - DeleteOnTermination: 'true'
              DeviceIndex: 0
              SubnetId: !Ref mgmtsubnet
              GroupSet:
                  - !Ref sgdefault
  sgdefault:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
        GroupDescription: default VPC security group
        VpcId: !Ref VPC
  acl5:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
        CidrBlock: 0.0.0.0/0
        Egress: 'true'
        Protocol: '-1'
        RuleAction: allow
        RuleNumber: '100'
        NetworkAclId: !Ref NetworkAcl
  acl6:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
        CidrBlock: 0.0.0.0/0
        Protocol: '-1'
        RuleAction: allow
        RuleNumber: '100'
        NetworkAclId: !Ref NetworkAcl
  subnetacl7:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
        NetworkAclId: !Ref NetworkAcl
        SubnetId: !Ref trustsubnet
  subnetacl8:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
        NetworkAclId: !Ref NetworkAcl
        SubnetId: !Ref untrustsubnet
  subnetacl9:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
        NetworkAclId: !Ref NetworkAcl
        SubnetId: !Ref mgmtsubnet
  dchpassoc3:
    Type: 'AWS::EC2::VPCDHCPOptionsAssociation'
    Properties:
        VpcId: !Ref VPC
        DhcpOptionsId: !Ref DHCPOpt
  assoc2:
    Type: 'AWS::EC2::EIPAssociation'
    Properties:
        AllocationId: !GetAtt
            - EIP
            - AllocationId
        InstanceId: !Ref Panorama
  ingress5:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
        GroupId: !Ref sgdefault
        IpProtocol: '-1'
        CidrIp: !Ref InboundIP
  egress2:
    Type: 'AWS::EC2::SecurityGroupEgress'
    Properties:
        GroupId: !Ref sgdefault
        IpProtocol: '-1'
        CidrIp: 0.0.0.0/0
